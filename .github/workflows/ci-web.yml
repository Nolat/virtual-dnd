name: ci-web

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  ci-web:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Setup node env
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn

      - name: Check typing
        working-directory: ./web
        run: yarn type-check

      - name: Lint
        working-directory: ./web
        run: yarn lint

      - name: Build application
        working-directory: ./web
        run: yarn build
        
      - name: Run tests
        working-directory: ./web
        run: yarn test -i --passWithNoTests
        env: 
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Run e2e test
        working-directory: ./web
        run: yarn cypress:test

      - name: Publish stories to chromatic
        working-directory: ./web
        run: yarn chromatic --exit-once-uploaded 
        env:
          CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
